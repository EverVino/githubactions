name: ci

on: push

jobs:
  linter-actions:
    name: linter code base
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    permissions:
      contents: read
      packages: read
      statuses: write
    #permissions:
      #pull-requests: write
      #contents: write
      #packages: write
      #statuses: write
    steps:
      - name: Checking code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Run super-linter
        uses: super-linter/super-linter/slim@v5
        env:
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_PYTHON: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install deps
        run: | 
          pip install -r requirements.txt

      - name: Launch test
        run: coverage run test.py #python test.py
        env:
          COVERAGE_FILE: ".coverage.${{ matrix.python-version }}"
          
      - name: Store coverage file
        uses: actions/upload-artifact@v3.1.2
        with:
          name: coverage
          path: .coverage.${{ matrix.python-version }}
          
  coverage:      
    name: Coverage
    runs-on: ubuntu-latest
    needs: linter-actions
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        id: download
        with:
          name: 'coverage'

      - name: Coverage comment
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_COVERAGE_FILES: true

      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v3
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          # If you use a different name, update COMMENT_ARTIFACT_NAME accordingly
          name: python-coverage-comment-action
          # If you use a different name, update COMMENT_FILENAME accordingly
          path: python-coverage-comment-action.txt
